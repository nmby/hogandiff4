/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

// TODO: groovy要お勉強 (*_*;

import java.time.LocalDateTime
import java.time.format.DateTimeFormatter
import java.nio.file.Files
import java.nio.file.Path

final def version = '0.17.4'

final def timetag = LocalDateTime.now().format(DateTimeFormatter.ofPattern('yyyyMMdd-HHmmss-SSS'))
final def baseDir = projectDir.toPath()

final def targetFatZip = baseDir.resolve('xyz.hotchpotch.hogandiff/build/distributions/xyz.hotchpotch.hogandiff.zip')

final def outputDir = baseDir.resolve('build/' + timetag)
final def outputDirTmpJars = outputDir.resolve("tmp/fat/xyz.hotchpotch.hogandiff/lib")
final def outputDirWinX64 = outputDir.resolve("方眼Diff-${version}-win-x64")
final def outputDirMacX64 = outputDir.resolve("方眼Diff-${version}-mac-x64")

final def requiredMods = '' \
    + 'java.base,' \
    + 'java.desktop,' \
    + 'java.management,' \
    + 'java.naming,' \
    + 'java.xml,' \
    + 'javafx.base,' \
    + 'javafx.controls,' \
    + 'javafx.fxml,' \
    + 'javafx.graphics,' \
    + 'jdk.charsets,' \
    + 'jdk.zipfs'

task pickupAndExpandFatJar(type: Copy) {
    group 'distribution_common'

    from zipTree(targetFatZip)
    into outputDir.resolve("tmp/fat")
}

// executable on [win-x64, mac-x64]
task jlinkForWinX64(type: Exec) {
    group 'distribution_win_x64'

    commandLine project['myprop.cmd.jlink'],
            '--no-header-files',
            '--no-man-pages',
            '--module-path', "${project['myprop.jre.mod.win.x64']};${project['myprop.jfx.mod.win.x64']}",
            '--add-modules', requiredMods,
            '--output', outputDir.resolve('tmp/jre-min-win-x64'),
            '--strip-debug',
            '--verbose'
}

// executable on [win-x64, mac-x64]
task jlinkForMacX64(type: Exec) {
    group 'distribution_mac_x64'

    commandLine project['myprop.cmd.jlink'],
            '--no-header-files',
            '--no-man-pages',
            '--module-path', "${project['myprop.jre.mod.mac.x64']};${project['myprop.jfx.mod.mac.x64']}",
            '--add-modules', requiredMods,
            '--output', outputDir.resolve('tmp/jre-min-mac-x64'),
            '--strip-debug',
            '--verbose'
}

// executable on [win-x64]
task exewrapForWinX64(type: Exec, dependsOn: pickupAndExpandFatJar) {
    group 'distribution_win_x64'

    commandLine project['myprop.cmd.exewrap'],
            '-g',
            '-t', '21',
            '-i', baseDir.resolve('resources/favicon.ico'),
            '-v', version,
            '-V', version,
            '-d', '方眼Diff',
            '-p', '方眼Diff',
            '-c', '(c) 2018-2023 nmby',
            '-j', outputDirTmpJars.resolve("xyz.hotchpotch.hogandiff.jar"),
            '-o', outputDirWinX64.resolve('方眼Diff.exe')
}

// executable on [win-x64, mac-x64]
task gatherFilesForWinX64(dependsOn: [pickupAndExpandFatJar, jlinkForWinX64]) {
    group 'distribution_win_x64'

    doLast {
        copy {
            from baseDir
            include 'README.md', 'LICENSE.txt', 'NOTICE.txt'
            into outputDirWinX64
        }
        copy {
            from baseDir.resolve('resources')
            include '方眼Diff.exe.vmoptions'
            into outputDirWinX64
        }
        copy {
            from outputDirTmpJars
            exclude "xyz.hotchpotch.hogandiff.jar"
            into outputDirWinX64.resolve("lib")
        }
        copy {
            from outputDir.resolve('tmp/jre-min-win-x64')
            into outputDirWinX64.resolve("jre-min")
        }
        copy {
            from project['myprop.poi.src']
            include 'LICENSE', 'NOTICE'
            into outputDirWinX64.resolve("lib/legal/poi")
        }
        copy {
            from project['myprop.log4j.bin']
            include 'LICENSE.txt', 'NOTICE.txt'
            into outputDirWinX64.resolve("lib/legal/log4j")
        }
    }
}

// executable on [win-x64, mac-x64]
task gatherFilesForMacX64(dependsOn: [pickupAndExpandFatJar, jlinkForMacX64]) {
    group 'distribution_mac_x64'

    doLast {
        copy {
            from baseDir.resolve('resources/方眼Diff.app')
            exclude '**/.gitkeep'
            into outputDirMacX64.resolve('方眼Diff.app')
        }
        copy {
            from baseDir
            include 'README.md', 'LICENSE.txt', 'NOTICE.txt'
            into outputDirMacX64.resolve('方眼Diff.app/Contents/Resources')
        }
        copy {
            from outputDirTmpJars
            into outputDirMacX64.resolve('方眼Diff.app/Contents/Java')
        }
        copy {
            from outputDir.resolve('tmp/jre-min-mac-x64')
            into outputDirMacX64.resolve('方眼Diff.app/Contents/PlugIns/jre-min')
        }
        copy {
            from project['myprop.poi.src']
            include 'LICENSE', 'NOTICE'
            into outputDirMacX64.resolve('方眼Diff.app/Contents/Java/legal/poi')
        }
        copy {
            from project['myprop.log4j.bin']
            include 'LICENSE.txt', 'NOTICE.txt'
            into outputDirMacX64.resolve('方眼Diff.app/Contents/Java/legal/log4j')
        }
    }
}

// executable on [win-x64]
task zipForWinX64(type: Zip, dependsOn: [exewrapForWinX64, gatherFilesForWinX64]) {
    group 'distribution_win_x64'

    metadataCharset = 'UTF-8'
    archiveBaseName = "hogandiff-${version}-win-x64"
    destinationDirectory = file(outputDir)
    from outputDirWinX64
    into outputDirWinX64.getFileName().toString()
}

// executable on [win-x64, mac-x64]
task zipForMacX64(type: Zip, dependsOn: gatherFilesForMacX64) {
    group 'distribution_mac_x64'

    metadataCharset = 'UTF-8'
    archiveBaseName = "hogandiff-${version}-mac-x64"
    destinationDirectory = file(outputDir)
    from outputDirMacX64
    into outputDirMacX64.getFileName().toString()
}

// executable on [win-x64]
task allForWinX64(dependsOn: zipForWinX64) {
    group 'distribution_win_x64'
}

// executable on [win-x64, mac-x64]
task allForMacX64(dependsOn: zipForMacX64) {
    group 'distribution_mac_x64'
}

// executable on [win-x64]
task all(dependsOn: [allForWinX64, allForMacX64]) {
    group 'distribution_common'
}

// executable on [win-x64, mac-x64]
task checkDependencies(type: Exec, dependsOn: pickupAndExpandFatJar) {
    group 'test'

    commandLine project['myprop.cmd.jdeps'],
            '--multi-release', 21,
            '--module-path', "${project['myprop.jre.mod.win.x64']};${project['myprop.jfx.lib.win.x64']}",
            '-s', outputDirTmpJars.resolve("xyz.hotchpotch.hogandiff.jar")
}
